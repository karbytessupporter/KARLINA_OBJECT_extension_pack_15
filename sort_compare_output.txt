--------------------------------
Start Of Program
--------------------------------

Enter a natural number value to store in the value S which is no larger than 1000: 

The value which was entered for S is 7.

S := 7. // number of consecutive int-sized chunks of memory to allocate to a one-dimensional array of S integers named A.

--------------------------------

Enter a natural number value to store in the value T which is no larger than 1000: 

The value which was entered for T is 45.

T := 45. // number of unique states each element of A can represent exactly one of.

--------------------------------

UNSORTED ARRAY

A := 0x5634ae4d68c0. // memory address of A[0]

A[0] := 12.		// &A[0] = 0x5634ae4d68c0. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[0]).
A[1] := 41.		// &A[1] = 0x5634ae4d68c4. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[1]).
A[2] := 2.		// &A[2] = 0x5634ae4d68c8. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[2]).
A[3] := 37.		// &A[3] = 0x5634ae4d68cc. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[3]).
A[4] := 25.		// &A[4] = 0x5634ae4d68d0. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[4]).
A[5] := 40.		// &A[5] = 0x5634ae4d68d4. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[5]).
A[6] := 9.		// &A[6] = 0x5634ae4d68d8. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[6]).

--------------------------------

--------------------------------

--------------------------------
End Of Program
--------------------------------