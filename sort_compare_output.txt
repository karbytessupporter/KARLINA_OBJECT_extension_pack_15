--------------------------------
Start Of Program
--------------------------------

Enter a natural number value to store in the value S which is no larger than 1000: 

The value which was entered for S is 10.

S := 10. // number of consecutive int-sized chunks of memory to allocate to a one-dimensional array of S integers named A.

--------------------------------

Enter a natural number value to store in the value T which is no larger than 1000: 

The value which was entered for T is 100.

T := 100. // number of unique states each element of A can represent exactly one of.

--------------------------------

UNSORTED ARRAY A

A := 0x55930ac568c0. // memory address of A[0]

A[0] := 71. 	// &A[0] = 0x55930ac568c0. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[0]).
A[1] := 88. 	// &A[1] = 0x55930ac568c4. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[1]).
A[2] := 70. 	// &A[2] = 0x55930ac568c8. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[2]).
A[3] := 70. 	// &A[3] = 0x55930ac568cc. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[3]).
A[4] := 48. 	// &A[4] = 0x55930ac568d0. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[4]).
A[5] := 68. 	// &A[5] = 0x55930ac568d4. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[5]).
A[6] := 92. 	// &A[6] = 0x55930ac568d8. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[6]).
A[7] := 27. 	// &A[7] = 0x55930ac568dc. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[7]).
A[8] := 98. 	// &A[8] = 0x55930ac568e0. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[8]).
A[9] := 36. 	// &A[9] = 0x55930ac568e4. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A[9]).

--------------------------------

UNSORTED ARRAY A_copy

A_copy := 0x55930ac568f0. // memory address of A_copy[0]

A_copy[0] := 71. 	// &A_copy[0] = 0x55930ac568f0. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A_copy[0]).
A_copy[1] := 88. 	// &A_copy[1] = 0x55930ac568f4. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A_copy[1]).
A_copy[2] := 70. 	// &A_copy[2] = 0x55930ac568f8. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A_copy[2]).
A_copy[3] := 70. 	// &A_copy[3] = 0x55930ac568fc. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A_copy[3]).
A_copy[4] := 48. 	// &A_copy[4] = 0x55930ac56900. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A_copy[4]).
A_copy[5] := 68. 	// &A_copy[5] = 0x55930ac56904. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A_copy[5]).
A_copy[6] := 92. 	// &A_copy[6] = 0x55930ac56908. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A_copy[6]).
A_copy[7] := 27. 	// &A_copy[7] = 0x55930ac5690c. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A_copy[7]).
A_copy[8] := 98. 	// &A_copy[8] = 0x55930ac56910. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A_copy[8]).
A_copy[9] := 36. 	// &A_copy[9] = 0x55930ac56914. (memory address of the first memory cell comprising the block of 4 contiguous memory cells allocated to A_copy[9]).

--------------------------------

--------------------------------
End Of Program
--------------------------------